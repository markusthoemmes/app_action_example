name: Example Workflow

on:
  pull_request:
    branches: [main]

permissions:
  issues: write
  contents: write
  deployments: write

jobs:
  test:
    name: Test the Action
    runs-on: ubuntu-latest

    steps:
      # - name: create deployment
      #   id: create_deployment
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: POST /repos/:repository/deployments
      #     repository: ${{ github.repository }}
      #     ref: ${{ github.head_ref }}
      #     environment: ${{ github.head_ref }}
      #     required_contexts: "[]"
      #     auto_merge: false
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # - name: set deployment status to in progress
      #   id: start_deployment
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: POST /repos/:repository/deployments/:deployment/statuses
      #     repository: ${{ github.repository }}
      #     deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
      #     environment: ${{ github.head_ref }}
      #     log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #     state: in_progress
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: checkout repo
        uses: actions/checkout@v4
      - name: deploy the app
        id: run
        uses: markusthoemmes/app_action_v2@main
        with:
          deploy_preview: "true"
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':rocket: :rocket: :rocket: The app was successfully deployed at ${{ fromJson(steps.run.outputs.app).live_url }}. Logs can be found [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).'
            })
      - uses: actions/github-script@v7
        if: failure()
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The app failed to be deployed. Logs can be found [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).'
            })

      # - name: set deployment status to success
      #   id: successful_deployment
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: POST /repos/:repository/deployments/:deployment/statuses
      #     repository: ${{ github.repository }}
      #     deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
      #     environment: ${{ github.head_ref }}
      #     environment_url: ${{ fromJson(steps.run.outputs.app).live_url }}
      #     log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #     state: success
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # - name: set deployment status to failure
      #   id: failed_deployment
      #   uses: octokit/request-action@v2.x
      #   if: failure()
      #   with:
      #     route: POST /repos/:repository/deployments/:deployment/statuses
      #     repository: ${{ github.repository }}
      #     deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
      #     environment: ${{ github.head_ref }}
      #     log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #     state: failure
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
